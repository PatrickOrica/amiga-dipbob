import json
import argparse
from protocol import Protocol, PhysicalLayer

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Dip and Bob Visualiser')
    parser.add_argument('-b', '--baud', help='Baudrate', default=1000000, dest='baud', type=int)
    parser.add_argument('-p', '--port', help='Serial Port', default='/dev/ttyACM0', dest='port')
    parser.add_argument('-f', '--file', help='File to log too', default='temp.json', dest='file')
    args = parser.parse_args()

    phy = PhysicalLayer(baud=args.baud, port=args.port)
    mac = Protocol(phy)

    buf = mac.execute_cycle()

    with open(args.file, 'w') as f:
        json.dump(buf, f)
import json
import argparse
from protocol import Protocol, PhysicalLayer

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Dip and Bob Visualiser')
    parser.add_argument('-b', '--baud', help='Baudrate', default=1000000, dest='baud', type=int)
    parser.add_argument('-p', '--port', help='Serial Port', default='/dev/ttyACM0', dest='port')
    parser.add_argument('-f', '--file', help='File to log too', default='temp.json', dest='file')
    args = parser.parse_args()

    phy = PhysicalLayer(baud=args.baud, port=args.port)
    mac = Protocol(phy)

    buf = mac.execute_cycle()
    print(f"Data from execute_cycle: {buf}")
    print("Deploying plumbob")

    with open(args.file, 'w') as f:
        json.dump(buf, f)
